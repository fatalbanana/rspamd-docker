name: Publish Docker image

on:
  workflow_call:
    inputs:
      nightly:
        default: true
        required: false
        type: boolean
      platform:
        default: amd64
        type: string
    outputs:
      digest_asan:
        description: "Digest of the ASAN image"
        value: ${{ jobs.docker_build.outputs.digest_asan }}
      digest_release:
        description: "Digest of the release image"
        value: ${{ jobs.docker_build.outputs.digest_release }}
      tag:
        description: "Tag in rspamd repo to check out for tests"
        value: ${{ jobs.docker_build.outputs.tag }}

jobs:
  docker_build:
    outputs:
      digest_asan: "${{ steps.build_asan.outputs.digest }}"
      digest_release: "${{ steps.build_release.outputs.digest }}"
      tag: ${{ steps.save_output.outputs.tag }}
    runs-on: "${{ (inputs.platform == 'arm64') && 'ubuntu-22.04-arm' || 'ubuntu-22.04' }}"
    permissions:
      packages: write
      contents: read
    steps:
      - name: Check out source code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set nightly-specific variables
        if: ${{ inputs.nightly }}
        run: |
          echo "PKG_TAG_SUFFIX=-nightly-${{ inputs.platform }}" >> "$GITHUB_ENV"
          echo "RSPAMD_GIT=master" >> "$GITHUB_ENV"
          echo "RSPAMD_VERSION=auto" >> "$GITHUB_ENV"

      - name: Set release-specific variables
        if: ${{ ! inputs.nightly }}
        run: |
          export VERSION_BUILD=`echo ${{ github.ref_name }} | sed s/^v// | sed 's/\+/-/'`
          echo "VERSION_BUILD=${VERSION_BUILD}" >> "$GITHUB_ENV"
          export VERSION_FULL=`echo ${{ github.ref_name }} | sed s/^v// | sed 's/\+.*//'`
          echo "VERSION_FULL=${VERSION_FULL}" >> "$GITHUB_ENV"
          export VERSION_MAJOR_MINOR=${VERSION_FULL%.*}
          echo "VERSION_MAJOR_MINOR=${VERSION_MAJOR_MINOR}" >> "$GITHUB_ENV"
          export VERSION_MAJOR=`echo ${{ github.ref_name }} | sed s/^v// | sed 's/[^0-9].*//'`
          echo "VERSION_MAJOR=${VERSION_MAJOR}" >> "$GITHUB_ENV"
          echo "PKG_TAG_SUFFIX=-`echo ${{ github.ref_name }} | sed s/+/-/ | sed s/^v//`" >> "$GITHUB_ENV"
          echo "RSPAMD_GIT=`echo ${{ github.ref_name }} | sed s/^v// | sed s/+.*//`" >> "$GITHUB_ENV"
          echo "RSPAMD_VERSION=`echo ${{ github.ref_name }} | sed s/^v// | sed s/+.*//`-${{ inputs.platform }}" >> "$GITHUB_ENV"

      - name: Save output
        id: save_output
        run: |
          echo "tag=${{ env.RSPAMD_GIT }}" >> $GITHUB_OUTPUT

      - name: Build pkg image
        uses: docker/build-push-action@v5
        with:
          build-args: |
            RSPAMD_GIT=${{ env.RSPAMD_GIT }}
            RSPAMD_VERSION=${{ env.RSPAMD_VERSION }}
          file: Dockerfile.pkg
          push: true
          tags: ghcr.io/${{ github.repository }}:pkg${{ env.PKG_TAG_SUFFIX }}

      - name: Build release image
        id: build_release
        uses: docker/build-push-action@v5
        with:
          build-args: |
            PKG_IMG=ghcr.io/${{ github.repository }}
            PKG_TAG=pkg${{ env.PKG_TAG_SUFFIX }}
          file: Dockerfile
          push: true
          tags: ""
          outputs: "type=image,name=ghcr.io/${{ github.repository }},push-by-digest=true"

      - name: Build ASAN image
        id: build_asan
        uses: docker/build-push-action@v5
        with:
          build-args: |
            ASAN_TAG=-asan
            PKG_IMG=ghcr.io/${{ github.repository }}
            PKG_TAG=pkg${{ env.PKG_TAG_SUFFIX }}
          file: Dockerfile
          push: true
          tags: ""
          outputs: "type=image,name=ghcr.io/${{ github.repository }},push-by-digest=true"
